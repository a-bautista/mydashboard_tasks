"""
Django settings for mydashboard project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
#from sendgrid import SendGridAPIClient

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY_DJANGO']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['telos-dashboard-container.herokuapp.com', '0.0.0.0', '127.0.0.1', 'localhost', 'www.telos-app.xyz', 'telos-app.xyz']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages', # necessary for the AWS
    'home',
    'task',
    'accounts',
    'category',
    'goal',
    'user_profile',
    'widget_tweaks'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mydashboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# this overwrites the default behavior for the User model and use the custom model
AUTH_USER_MODEL = 'accounts.Account'

WSGI_APPLICATION = 'mydashboard.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# If this app is deployed to Heroku, remove the comments from below
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# If this app is deployed to Heroku, add comments to this Databases section. This section is used with the docker-compose.yml file
# for connecting your postgres db. 
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'postgres',
#        'USER': 'postgres',
#        'PASSWORD': 'postgres_password',
#        'HOST': 'db',
#        'PORT': 5432
#    }
#}

import dj_database_url
db_from_env = dj_database_url.config()
DATABASES['default'].update(db_from_env)
DATABASES['default']['CONN_MAX_AGE'] = 500

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/



STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR,'static'),)
#STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static', 'mydashboard'))
STATIC_ROOT = os.path.join(BASE_DIR, "live-static", "static-root")


# Static files for running your app in Live
# Whitenoise is mandatory for making the gunicorn to work correctly
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files for running your app in Live
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# when logged in successfully, log in to the main dashboard
LOGIN_REDIRECT_URL = 'main_dashboard'
LOGIN_URL = 'login'

# AWS storage keys
AWS_ACCESS_KEY_ID       = os.environ['AWS_ACCESS_KEY_ID']
AWS_SECRET_ACCESS_KEY   = os.environ['AWS_SECRET_ACCESS_KEY']
AWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']

# files won't be overwritten but renamed
AWS_S3_FILE_OVERWRITE = False

# set this to None due to functionality
AWS_DEFAULT_ACL = None

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


# email settings password reset with sendgrid - not working

# Send grid credentials
# SENDGRID_API_KEY = os.environ["SENDGRID_API_KEY"]
# SENDGRID_PASSWORD= os.environ["SENDGRID_PASSWORD"]
# SENDGRID_USERNAME= os.environ["SENDGRID_USERNAME"]

# email settings
# EMAIL_HOST = 'smtp.sendgrid.net'


# previous combinations that didn't send any email

#EMAIL_HOST_USER = os.environ['EMAIL_HOST_USER']
#EMAIL_HOST_PASSWORD = os.environ["SENDGRID_PASSWORD"]

#EMAIL_HOST_USER = os.environ['EMAIL_HOST_USER']
#EMAIL_HOST_PASSWORD = os.environ["EMAIL_HOST_PASSWORD"]

#EMAIL_HOST_USER = 'apikey'
#EMAIL_HOST_PASSWORD = os.environ["SENDGRID_PASSWORD"]

#EMAIL_HOST_USER = 'apikey'
#EMAIL_HOST_PASSWORD = os.environ["EMAIL_HOST_PASSWORD"]

# EMAIL_HOST_USER = 'apikey'
# EMAIL_HOST_PASSWORD = os.environ["EMAIL_HOST_PASSWORD"]
# FROM_EMAIL = 'telosappxyz@gmail.com'

# EMAIL_HOST_USER = 'apikey'
# EMAIL_HOST_PASSWORD = os.environ["SENDGRID_API_KEY"]

# EMAIL_HOST_USER = 'apikey'
# EMAIL_HOST_PASSWORD = os.environ["SENDGRID_API_KEY"]

#EMAIL_HOST_USER = 'apikey'
#EMAIL_HOST_PASSWORD = os.environ["SENDGRID_API_KEY"]
#FROM_EMAIL = 'telosappxyz@gmail.com'

# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# DEFAULT_FROM_EMAIL = os.environ["DEFAULT_FROM_EMAIL"]

#SENDGRID_SANDBOX_MODE_IN_DEBUG = True
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"


# email settings password reset with Gmail - working

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = os.environ["EMAIL_HOST_USER"]
EMAIL_HOST_PASSWORD = os.environ["EMAIL_HOST_PASSWORD"]
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = os.environ["DEFAULT_FROM_EMAIL"]
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'